Index: app/src/main/java/com/ss_team_1/koibitoshuuchuu/presentation/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ss_team_1.koibitoshuuchuu.presentation\r\n\r\nimport android.os.Bundle\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.navigation.NavController\r\nimport androidx.navigation.NavType\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.composable\r\nimport androidx.navigation.compose.rememberNavController\r\nimport androidx.navigation.navArgument\r\nimport com.ss_team_1.koibitoshuuchuu.presentation.components.PageProfile\r\nimport com.ss_team_1.koibitoshuuchuu.presentation.components.UserDataPage\r\nimport com.ss_team_1.koibitoshuuchuu.presentation.pages.*\r\nimport com.ss_team_1.koibitoshuuchuu.ui.theme.KoiBitoShuuChuuTheme\r\nimport dagger.hilt.android.AndroidEntryPoint\r\n\r\n@AndroidEntryPoint\r\nclass MainActivity : ComponentActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContent {\r\n            KoiBitoShuuChuuTheme {\r\n                val navController = rememberNavController()\r\n                NavHost(navController = navController, startDestination = Page.Welcome.route) {\r\n                    composable(Page.Welcome.route) { WelcomePage(navController/*...*/) }\r\n                    composable(Page.Home.route) {\r\n                        HomePage(navController,\r\n                            onClickToCharacterInfo = { characterID ->\r\n                                navController.navigate(Page.CharacterInfoAndStory.route + \"/$characterID\")\r\n                            }\r\n                        )\r\n                    }\r\n                    composable(Page.Profile.route) { PageProfile(navController) }\r\n                    composable(Page.UserData.route) { UserDataPage(navController) }\r\n                    composable(Page.Shop.route) {\r\n                        ShopPage(\r\n                            navController = navController\r\n                        )\r\n                    }\r\n                    composable(Page.FocusIntro.route) { FocusIntroPage(navController) }\r\n                    composable(\r\n                        Page.Focus.route + \"/{focusTime}\",\r\n                        arguments = listOf(navArgument(\"focusTime\") {\r\n                            type = NavType.IntType\r\n                        })\r\n                    ) { backStackEntry ->\r\n                        val focusTime = backStackEntry.arguments?.getInt(\"focusTime\")\r\n                        FocusPage(navController, focusTime)\r\n                    }\r\n                    composable(\r\n                        //character0 will be -> Page.CharacterInfoAndStory.route + \"/0\"\r\n                        route = Page.CharacterInfoAndStory.route + \"/{characterID}\",\r\n                        arguments = listOf(\r\n                            navArgument(\"characterID\") {\r\n                                type = NavType.IntType\r\n                            }\r\n                        )\r\n                    ) { entry ->\r\n                        val characterID = entry.arguments?.getInt(\"characterID\")!!\r\n                        CharacterInfoAndStoryPage(\r\n                            characterID = characterID,\r\n                            onClickGoStory = { plotID ->\r\n                                navController.navigate(Page.Plot.route + \"/$characterID/$plotID\")\r\n                            },\r\n                            onClickGoDetail = { navController.navigate(Page.CharacterDetail.route + \"/$characterID\") },\r\n                            navController = navController\r\n                        )\r\n                    }\r\n\r\n                    composable(\r\n                        route = Page.CharacterDetail.route + \"/{characterID}\",\r\n                        arguments = listOf(\r\n                            navArgument(\"characterID\") {\r\n                                type = NavType.IntType\r\n                            }\r\n                        )\r\n                    ) { entry ->\r\n                        CharacterDetailPage(\r\n                            characterID = entry.arguments?.getInt(\"characterID\")!!,\r\n                            navController = navController\r\n                        )\r\n                    }\r\n//                    composable(\r\n//                        route = Page.Plot.route + \"/{characterID}/{plotID}\",\r\n//                        arguments = listOf(\r\n//                            navArgument(\"characterID\") {\r\n//                                type = NavType.IntType\r\n//                            },\r\n//                            navArgument(\"plotID\") {\r\n//                                type = NavType.IntType\r\n//                            }\r\n//                        )\r\n//                    ) { entry ->\r\n//                        PlotPage(\r\n//                            plotID = entry.arguments?.getInt(\"plotID\")!!,\r\n//                            characterID = entry.arguments?.getInt(\"characterID\")!!,\r\n//                            navController = navController,\r\n//                            onPlotEnd = {\r\n//                                navController.popBackStack()\r\n//                                MyApplication.appContainer().plotRepository.setPlotSeen(\r\n//                                    characterId = entry.arguments?.getInt(\"characterID\")!!,\r\n//                                    plotNum = entry.arguments?.getInt(\"plotID\")!!\r\n//                                )\r\n//                            }\r\n//                        )\r\n//                    }\r\n                    //composable(Page.FocusIntro.route) { FocusIntroPage(navController) }\r\n                    /*...*/\r\n                }\r\n\r\n                //WelcomePage()\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Class for route of Pages\r\n */\r\nsealed class Page(val route: String) {\r\n    object Welcome : Page(\"welcome_page\")\r\n    object Home : Page(\"home_page\")\r\n    object Profile : Page(\"profile_page\")\r\n    object UserData : Page(\"user_data_page\")\r\n    object Shop : Page(\"shop_page\")\r\n    object FocusIntro : Page(\"focus_intro_page\")\r\n    object Focus : Page(\"focus_page\")\r\n    object CharacterInfoAndStory : Page(\"character_info_and_story_page\")\r\n    object CharacterDetail : Page(\"character_detail_page\")\r\n    object Plot : Page(\"plot_page\")\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ss_team_1/koibitoshuuchuu/presentation/MainActivity.kt b/app/src/main/java/com/ss_team_1/koibitoshuuchuu/presentation/MainActivity.kt
--- a/app/src/main/java/com/ss_team_1/koibitoshuuchuu/presentation/MainActivity.kt	(revision 502a84c97b59bad6bc27013209ee000b437c9902)
+++ b/app/src/main/java/com/ss_team_1/koibitoshuuchuu/presentation/MainActivity.kt	(date 1654961599677)
@@ -3,8 +3,6 @@
 import android.os.Bundle
 import androidx.activity.ComponentActivity
 import androidx.activity.compose.setContent
-import androidx.compose.ui.platform.LocalContext
-import androidx.navigation.NavController
 import androidx.navigation.NavType
 import androidx.navigation.compose.NavHost
 import androidx.navigation.compose.composable
